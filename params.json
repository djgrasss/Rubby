{"name":"Rubby","tagline":"Rubby is a little language on top of Ruby.","body":"# Rubby\r\n\r\nRubby is a little language on top of Ruby. Rubby has a simpler,\r\nmore concise syntax than Ruby, but gives you access to most of Ruby's\r\nprimitives and capabilities. Rubby is billed as \"Ruby; the good parts\" and\r\nas such is an opinionated language, it does it's best to give you access to\r\nthe expressiveness and flexibility of Ruby whilst getting rid of some of the\r\nunnecessary syntax and removing some of Ruby's language features which may\r\nbe considered traps for young players.\r\n\r\nRubby consists of a transpiler, which outputs idiomatic Ruby, and an\r\n\"interpreter\" which executes Rubby as if it was the corresponding Ruby code.\r\n\r\n## Status\r\n\r\n[![Build Status](https://travis-ci.org/jamesotron/Rubby.png?branch=master)](https://travis-ci.org/jamesotron/Rubby)\r\n[![Dependency Status](https://gemnasium.com/jamesotron/Rubby.png)](https://gemnasium.com/jamesotron/Rubby)\r\n[![Code Climate](https://codeclimate.com/github/jamesotron/Rubby.png)](https://codeclimate.com/github/jamesotron/Rubby)\r\n\r\nFeatures required for 1.0 release:\r\n\r\n + Lexer\r\n   - Indent/dedent (✓)\r\n   - Integers (✓)\r\n   - Floats (✓)\r\n   - Strings (✓)\r\n   - Symbols (✓)\r\n   - Regular expressions\r\n   - Methods (✓)\r\n   - Standard operators (✓)\r\n   - Keywords (✓)\r\n + Parser\r\n   - Integers (✓)\r\n   - Floats (✓)\r\n   - Strings (✓)\r\n   - Symbols (✓)\r\n   - Regular expressions\r\n   - Method calls (✓)\r\n   - Blocks (✓)\r\n   - Class definitions (✓)\r\n   - Module definitions (✓)\r\n   - Method definitions (✓)\r\n     - Splat arguments (✓)\r\n     - Default arguments (✓)\r\n     - Keyword arguments (✓)\r\n     - Fix ambiguous parsing of method arguments in some sitations.\r\n + Transpiler\r\n   - Ruby output formatter (✓)\r\n   - Class/Module tidying\r\n + Interpreter (✓)\r\n + Polyglot interface (https://github.com/cjheath/polyglot) (✓)\r\n + REPL (✓)\r\n\r\nRubby is in it's infancy, pull requests are greatly appreciated.\r\n\r\n## Usage\r\n\r\n### Require\r\n\r\nRubby defines a polyglot hook so that you can require `.rbb` files straight from your Ruby projects.\r\n\r\n### Transpiler\r\n\r\nYou can transpile Rubby code into Ruby:\r\n\r\n```shell\r\n$ rubby my_amazing_rubby_script.rbb [optional_ruby_file_name.rb]\r\n```\r\n\r\n### REPL\r\n\r\nRubby has a (very basic) REPL:\r\n\r\n```shell\r\n$ irbb\r\nRubby version 0.1.2, starting REPL\r\nuse '\\' on the end of line for multiline input.\r\n>> \r\n```\r\n\r\n## Syntax examples\r\n\r\n### Primitives:\r\n\r\n#### Comments:\r\n\r\n```rubby\r\n# I am a comment\r\n```\r\n\r\n#### Integers\r\n\r\n```rubby\r\n123    # decimal\r\n0x123  # hexidecimal\r\n0123   # octal\r\n0x101  # binary\r\n```\r\n\r\n#### Floating point\r\n\r\n```rubby\r\n1.23\r\n```\r\n\r\n#### Strings\r\n\r\n```rubby\r\n'foo'            # basic string with no special characters\r\n\"foo\\n\"          # complex string, which can contain escaped characters\r\n\"foo #{bar} baz\" # complex string with interpolation\r\n```\r\n\r\n#### Symbols\r\n\r\n```rubby\r\n:foo              # simple symbol, which contain upper and lower case letters, numbers and underscores\r\n:\"foo bar\"        # complex symbol which can contain any string\r\n:\"foo #{bar} baz\" # complex symbol with interpolation\r\n```\r\n\r\n#### Regular expressions\r\n\r\n```rubby\r\n/^foo$/    # basic regular expression\r\n/^#{bar}$/ # regular expression with interpolation\r\n```\r\n\r\n#### Arrays\r\n\r\n```rubby\r\n[1,1.2,'foo',\"foo\",:foo]\r\n```\r\n\r\n#### Hashes\r\n\r\n```rubby\r\nfoo: 1, 'bar': 2, 3: 4\r\n```\r\n\r\nRubby will detect the Ruby environment and decide whether to output old fashioned (Ruby 1.8 style)\r\nhashes:\r\n\r\n```ruby\r\n{ :foo => 1, 'bar' => 2, 3 => 4 }\r\n```\r\n\r\nor the newer (Ruby >= 1.9) syntax:\r\n\r\n```ruby\r\n{ foo: 1, 'bar' => 2, 3 => 4 }\r\n```\r\n\r\nThis can be overridden by specifying the target version on the transpiler command line.\r\n\r\n#### Defining methods\r\n\r\nMethods are defined using the following format:\r\n\r\n    |modifiers|method name|-> (arguments)\r\n\r\nMethod modifiers are `@` to indicate a class method and `_` to indicate a private method.\r\n\r\n```rubby\r\n# an empty instance method\r\nmy_method-> (arg1, arg2)\r\n\r\n# an isntance method with contents\r\nmy_second_method-> (*args)\r\n  puts args.inspect\r\n\r\n# a private method\r\n_my_private_method-> (*args)\r\n  args\r\n\r\n# a class method\r\n@my_class_method-> (*args)\r\n  args\r\n\r\n# a private class method\r\n@_my_private_class_method-> (*args)\r\n  args\r\n```\r\n\r\n```ruby\r\ndef my_method(arg1, arg2); end\r\n\r\ndef my_second_method(*args)\r\n  puts args.inspect\r\nend\r\n\r\nprivate\r\ndef my_private_method(*args)\r\n  args\r\nend\r\n\r\ndef self.my_class_method(*args)\r\n  args\r\nend\r\n\r\nclass << self\r\n  private\r\n  def my_private_class_method(*args)\r\n    args\r\n  end\r\nend\r\n```\r\n\r\n#### Blocks\r\n\r\nBlocks are passed using the special `&>` operator. Blocks can take arguments\r\n(specified within braces `()` after the `&>`) and either a single expression\r\non the same line, or multiple expressions indented below:\r\n\r\n```rubby\r\n(1..5).each &> (i) puts i  # single expression block with argument\r\n\r\n(1..5).chunk &> (i)\r\n  if i.prime?\r\n    i**i\r\n  else\r\n    i\r\n```\r\n\r\n```ruby\r\n(1..5).each { |i| puts i }\r\n\r\n(1..5).each do |i|\r\n  if i.prime?\r\n    i ** i\r\n  else\r\n    i\r\n  end\r\nend\r\n```\r\n\r\n#### Modules\r\n\r\n```rubby\r\nmodule Foo # simple module with no contents\r\n\r\nmodule Bar\r\n  bar->\r\n    puts \"raise the bar!\"\r\n```\r\n\r\n```ruby\r\nFoo = Module.new\r\n\r\nmodule Bar\r\n  def bar\r\n    puts \"raise the bar!\"\r\n  end\r\nend\r\n```\r\n\r\n#### Classes\r\n\r\n```rubby\r\nclass Foo             # simple class with no contents\r\nclass Foo < Exception # simple class, which inherits from Exception with no contents\r\n\r\nclass Cat\r\n  @open->(what)\r\n    puts \"Cat cannot open #{what}\"\r\n```\r\n\r\n```ruby\r\nFoo = Class.new\r\nFoo = Class.new(Exception)\r\n\r\nclass Cat\r\n  def self.open(what)\r\n    puts \"Cat cannot open #{what}\"\r\n  end\r\nend\r\n```\r\n\r\n#### Extras\r\n\r\nShorter raise syntax:\r\n\r\n```rubby\r\n  o_O \"WTF!?\"\r\n```\r\n\r\n```ruby\r\n  raise \"WTF!?\"\r\n```\r\n\r\nExplicit return syntax:\r\n\r\n```rubby\r\n  <- \"b00m!\"\r\n```\r\n\r\n```ruby\r\n  return \"b00m!\"\r\n```\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'rubby'\r\n```\r\n\r\nAnd then execute:\r\n\r\n```shell\r\n$ bundle\r\n```\r\n\r\nOr install it yourself as:\r\n\r\n```shell\r\n$ gem install rubby\r\n```\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2013 [Sociable Limited](http://sociable.co.nz) and named contributors:\r\n\r\n### Contributors\r\n\r\n + [James Harton](https://github.com/jamesotron)\r\n + [Philip Arndt](https://github.com/parndt)\r\n + [Bardoe](https://github.com/bardbess)\r\n + [Brett Wilkins](https://github.com/bwilkins)\r\n\r\n## License\r\n\r\n### MIT License\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n","google":"UA-4396183-15","note":"Don't delete this file! It's used internally to help with page regeneration."}